// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ouchihub/work/v1/work.proto

package workv1

import (
	v12 "github.com/akimoto-junya/ouchi-hub-backend/grpc/ouchihub/category/v1"
	v11 "github.com/akimoto-junya/ouchi-hub-backend/grpc/ouchihub/maker/v1"
	v1 "github.com/akimoto-junya/ouchi-hub-backend/grpc/ouchihub/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sort int32

const (
	Sort_SORT_UNSPECIFIED     Sort = 0
	Sort_SORT_TITLE_ASC       Sort = 1
	Sort_SORT_TITLE_DESC      Sort = 2
	Sort_SORT_MAKER_NAME_ASC  Sort = 3
	Sort_SORT_MAKER_NAME_DESC Sort = 4
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "SORT_UNSPECIFIED",
		1: "SORT_TITLE_ASC",
		2: "SORT_TITLE_DESC",
		3: "SORT_MAKER_NAME_ASC",
		4: "SORT_MAKER_NAME_DESC",
	}
	Sort_value = map[string]int32{
		"SORT_UNSPECIFIED":     0,
		"SORT_TITLE_ASC":       1,
		"SORT_TITLE_DESC":      2,
		"SORT_MAKER_NAME_ASC":  3,
		"SORT_MAKER_NAME_DESC": 4,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_ouchihub_work_v1_work_proto_enumTypes[0].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_ouchihub_work_v1_work_proto_enumTypes[0]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{0}
}

type FileType int32

const (
	FileType_FILE_TYPE_UNSPECIFIED FileType = 0
	FileType_FILE_TYPE_IMAGE       FileType = 1
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE_TYPE_UNSPECIFIED",
		1: "FILE_TYPE_IMAGE",
	}
	FileType_value = map[string]int32{
		"FILE_TYPE_UNSPECIFIED": 0,
		"FILE_TYPE_IMAGE":       1,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_ouchihub_work_v1_work_proto_enumTypes[1].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_ouchihub_work_v1_work_proto_enumTypes[1]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{1}
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorIds []string `protobuf:"bytes,1,rep,name=author_ids,json=authorIds,proto3" json:"author_ids,omitempty"`
	MakerIds  []string `protobuf:"bytes,2,rep,name=maker_ids,json=makerIds,proto3" json:"maker_ids,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetAuthorIds() []string {
	if x != nil {
		return x.AuthorIds
	}
	return nil
}

func (x *Filter) GetMakerIds() []string {
	if x != nil {
		return x.MakerIds
	}
	return nil
}

type ListWorksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string  `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Sort      *Sort   `protobuf:"varint,2,opt,name=sort,proto3,enum=ouchihub.work.v1.Sort,oneof" json:"sort,omitempty"`
	Filter    *Filter `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListWorksRequest) Reset() {
	*x = ListWorksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorksRequest) ProtoMessage() {}

func (x *ListWorksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorksRequest.ProtoReflect.Descriptor instead.
func (*ListWorksRequest) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListWorksRequest) GetSort() Sort {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return Sort_SORT_UNSPECIFIED
}

func (x *ListWorksRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListWorksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Works    []*Work      `protobuf:"bytes,1,rep,name=works,proto3" json:"works,omitempty"`
	PageInfo *v1.PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *ListWorksResponse) Reset() {
	*x = ListWorksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorksResponse) ProtoMessage() {}

func (x *ListWorksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorksResponse.ProtoReflect.Descriptor instead.
func (*ListWorksResponse) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{2}
}

func (x *ListWorksResponse) GetWorks() []*Work {
	if x != nil {
		return x.Works
	}
	return nil
}

func (x *ListWorksResponse) GetPageInfo() *v1.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type CreateWorkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWorkRequest) Reset() {
	*x = CreateWorkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkRequest) ProtoMessage() {}

func (x *CreateWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkRequest) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{3}
}

type CreateWorkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWorkResponse) Reset() {
	*x = CreateWorkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkResponse) ProtoMessage() {}

func (x *CreateWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkResponse) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{4}
}

type GetDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetDirectoryRequest) Reset() {
	*x = GetDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryRequest) ProtoMessage() {}

func (x *GetDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryRequest.ProtoReflect.Descriptor instead.
func (*GetDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{5}
}

func (x *GetDirectoryRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type GetDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory *Directory `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *GetDirectoryResponse) Reset() {
	*x = GetDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryResponse) ProtoMessage() {}

func (x *GetDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryResponse.ProtoReflect.Descriptor instead.
func (*GetDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{6}
}

func (x *GetDirectoryResponse) GetDirectory() *Directory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type Work struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Maker        *v11.Maker    `protobuf:"bytes,3,opt,name=maker,proto3" json:"maker,omitempty"`
	Category     *v12.Category `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	IsRestricted bool          `protobuf:"varint,5,opt,name=is_restricted,json=isRestricted,proto3" json:"is_restricted,omitempty"`
	RootItemId   string        `protobuf:"bytes,6,opt,name=root_item_id,json=rootItemId,proto3" json:"root_item_id,omitempty"`
}

func (x *Work) Reset() {
	*x = Work{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Work) ProtoMessage() {}

func (x *Work) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Work.ProtoReflect.Descriptor instead.
func (*Work) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{7}
}

func (x *Work) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Work) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Work) GetMaker() *v11.Maker {
	if x != nil {
		return x.Maker
	}
	return nil
}

func (x *Work) GetCategory() *v12.Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Work) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

func (x *Work) GetRootItemId() string {
	if x != nil {
		return x.RootItemId
	}
	return ""
}

type Directory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directories []*Directory `protobuf:"bytes,3,rep,name=directories,proto3" json:"directories,omitempty"`
	Files       []*File      `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *Directory) Reset() {
	*x = Directory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{8}
}

func (x *Directory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Directory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Directory) GetDirectories() []*Directory {
	if x != nil {
		return x.Directories
	}
	return nil
}

func (x *Directory) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FileType FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=ouchihub.work.v1.FileType" json:"file_type,omitempty"`
	Url      string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ouchihub_work_v1_work_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ouchihub_work_v1_work_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ouchihub_work_v1_work_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_FILE_TYPE_UNSPECIFIED
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_ouchihub_work_v1_work_proto protoreflect.FileDescriptor

var file_ouchihub_work_v1_work_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6f,
	0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a,
	0x16, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75,
	0x62, 0x2f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62,
	0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x75, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x05, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x05,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f,
	0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x78,
	0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41,
	0x4b, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x04, 0x2a, 0x3a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x10, 0x01, 0x32, 0xa1, 0x02, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x22, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x23, 0x2e, 0x6f, 0x75, 0x63,
	0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xcc, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x42, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x69, 0x6d, 0x6f,
	0x74, 0x6f, 0x2d, 0x6a, 0x75, 0x6e, 0x79, 0x61, 0x2f, 0x6f, 0x75, 0x63, 0x68, 0x69, 0x2d, 0x68,
	0x75, 0x62, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x6f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31,
	0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x57, 0x58, 0xaa, 0x02, 0x10,
	0x4f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x10, 0x4f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x5c, 0x57, 0x6f, 0x72, 0x6b,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x4f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x5c, 0x57,
	0x6f, 0x72, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x12, 0x4f, 0x75, 0x63, 0x68, 0x69, 0x68, 0x75, 0x62, 0x3a, 0x3a, 0x57,
	0x6f, 0x72, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ouchihub_work_v1_work_proto_rawDescOnce sync.Once
	file_ouchihub_work_v1_work_proto_rawDescData = file_ouchihub_work_v1_work_proto_rawDesc
)

func file_ouchihub_work_v1_work_proto_rawDescGZIP() []byte {
	file_ouchihub_work_v1_work_proto_rawDescOnce.Do(func() {
		file_ouchihub_work_v1_work_proto_rawDescData = protoimpl.X.CompressGZIP(file_ouchihub_work_v1_work_proto_rawDescData)
	})
	return file_ouchihub_work_v1_work_proto_rawDescData
}

var file_ouchihub_work_v1_work_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ouchihub_work_v1_work_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ouchihub_work_v1_work_proto_goTypes = []interface{}{
	(Sort)(0),                    // 0: ouchihub.work.v1.Sort
	(FileType)(0),                // 1: ouchihub.work.v1.FileType
	(*Filter)(nil),               // 2: ouchihub.work.v1.Filter
	(*ListWorksRequest)(nil),     // 3: ouchihub.work.v1.ListWorksRequest
	(*ListWorksResponse)(nil),    // 4: ouchihub.work.v1.ListWorksResponse
	(*CreateWorkRequest)(nil),    // 5: ouchihub.work.v1.CreateWorkRequest
	(*CreateWorkResponse)(nil),   // 6: ouchihub.work.v1.CreateWorkResponse
	(*GetDirectoryRequest)(nil),  // 7: ouchihub.work.v1.GetDirectoryRequest
	(*GetDirectoryResponse)(nil), // 8: ouchihub.work.v1.GetDirectoryResponse
	(*Work)(nil),                 // 9: ouchihub.work.v1.Work
	(*Directory)(nil),            // 10: ouchihub.work.v1.Directory
	(*File)(nil),                 // 11: ouchihub.work.v1.File
	(*v1.PageInfo)(nil),          // 12: ouchihub.v1.PageInfo
	(*v11.Maker)(nil),            // 13: ouchihub.maker.v1.Maker
	(*v12.Category)(nil),         // 14: ouchihub.category.v1.Category
}
var file_ouchihub_work_v1_work_proto_depIdxs = []int32{
	0,  // 0: ouchihub.work.v1.ListWorksRequest.sort:type_name -> ouchihub.work.v1.Sort
	2,  // 1: ouchihub.work.v1.ListWorksRequest.filter:type_name -> ouchihub.work.v1.Filter
	9,  // 2: ouchihub.work.v1.ListWorksResponse.works:type_name -> ouchihub.work.v1.Work
	12, // 3: ouchihub.work.v1.ListWorksResponse.page_info:type_name -> ouchihub.v1.PageInfo
	10, // 4: ouchihub.work.v1.GetDirectoryResponse.directory:type_name -> ouchihub.work.v1.Directory
	13, // 5: ouchihub.work.v1.Work.maker:type_name -> ouchihub.maker.v1.Maker
	14, // 6: ouchihub.work.v1.Work.category:type_name -> ouchihub.category.v1.Category
	10, // 7: ouchihub.work.v1.Directory.directories:type_name -> ouchihub.work.v1.Directory
	11, // 8: ouchihub.work.v1.Directory.files:type_name -> ouchihub.work.v1.File
	1,  // 9: ouchihub.work.v1.File.file_type:type_name -> ouchihub.work.v1.FileType
	3,  // 10: ouchihub.work.v1.WorkService.ListWorks:input_type -> ouchihub.work.v1.ListWorksRequest
	5,  // 11: ouchihub.work.v1.WorkService.CreateWork:input_type -> ouchihub.work.v1.CreateWorkRequest
	7,  // 12: ouchihub.work.v1.WorkService.GetDirectory:input_type -> ouchihub.work.v1.GetDirectoryRequest
	4,  // 13: ouchihub.work.v1.WorkService.ListWorks:output_type -> ouchihub.work.v1.ListWorksResponse
	6,  // 14: ouchihub.work.v1.WorkService.CreateWork:output_type -> ouchihub.work.v1.CreateWorkResponse
	8,  // 15: ouchihub.work.v1.WorkService.GetDirectory:output_type -> ouchihub.work.v1.GetDirectoryResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ouchihub_work_v1_work_proto_init() }
func file_ouchihub_work_v1_work_proto_init() {
	if File_ouchihub_work_v1_work_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ouchihub_work_v1_work_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Work); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Directory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ouchihub_work_v1_work_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ouchihub_work_v1_work_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ouchihub_work_v1_work_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ouchihub_work_v1_work_proto_goTypes,
		DependencyIndexes: file_ouchihub_work_v1_work_proto_depIdxs,
		EnumInfos:         file_ouchihub_work_v1_work_proto_enumTypes,
		MessageInfos:      file_ouchihub_work_v1_work_proto_msgTypes,
	}.Build()
	File_ouchihub_work_v1_work_proto = out.File
	file_ouchihub_work_v1_work_proto_rawDesc = nil
	file_ouchihub_work_v1_work_proto_goTypes = nil
	file_ouchihub_work_v1_work_proto_depIdxs = nil
}
